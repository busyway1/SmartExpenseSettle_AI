"""
세금계산서 분석 프롬프트
"""

def get_tax_invoice_prompt(text: str, file_name: str = "", page_number: int = None) -> str:
    """세금계산서 분석 프롬프트 생성"""
    base_prompt = f"""
다음은 세금계산서 문서입니다. 이는 개별 문서이므로 해당 문서에서만 정보를 추출해주세요.

문서 내용:
{text}

"""
    
    # 페이지 번호 정보 추가
    page_info = f"**현재 페이지 번호: {page_number}**" if page_number is not None else ""
    
    return base_prompt + f"""
이 세금계산서에서 **다음 9개 필드만** 정확히 추출해주세요.

{page_info}

**중요: 여러 개의 세금계산서가 있는 경우**
- 승인번호가 다른 세금계산서는 각각 개별 문서로 취급해주세요
- 각 세금계산서마다 페이지 번호를 반드시 포함해주세요
- 배열 형태로 각 개별 세금계산서의 정보를 모두 출력해주세요

**추출할 필드 (9개만):**
1. 승인번호: 세금계산서 승인번호 (문서 식별자)
2. 공급가액: 공급가액 합계
3. 부가세액: 부가세 합계
4. 공급자상호: 공급자 회사명
5. 작성일자: 세금계산서 작성일자
6. 공급자등록번호: 공급자 사업자등록번호
7. 공급받는자등록번호: 공급받는자 사업자등록번호
8. 파일명: "{file_name}"
9. 페이지번호: {page_number if page_number is not None else "실제 파일의 페이지 번호 (예: 1, 2, 3...)"}

**중요한 지침:**
1. **위 9개 필드만 추출하고, 다른 정보는 절대 포함하지 마세요**
2. 승인번호가 다른 세금계산서는 각각 개별 문서로 처리
3. 각 문서마다 페이지 번호를 반드시 포함 (실제 파일의 페이지 번호)
4. 존재하지 않는 정보는 "정보 없음"으로 표시
5. **요청하지 않은 필드는 절대 추가하지 마세요**
6. **문서에 있는 다른 모든 정보는 무시하고 위 9개 필드만 추출하세요**
7. **추가 설명이나 주석 없이 순수한 JSON 배열만 반환하세요**
8. **각 필드명은 정확히 위에 명시된 대로 사용하세요** 
9. 회사명 오타가 나지 않게 한글자씩 꼼꼼히 읽으세요"""